{% import '_macros' as macros %}

{% set offset = 1 %}
{% set itemClasses = "text-body-16 text-gray-300 hover:text-gray-200 px-[0.63rem] transition-colors" %}
{% set spacerClasses = "" %}
{% set activeClasses = "!text-gray-200 border-gray-400 border-x" %}
{% set queryString = macros.toQueryString(params|default([])) %}

{% if pagination.totalPages > 1 %}
  <div class="flex flex-row justify-center items-center py-[0.625rem] md:py-2.5">
    {% apply spaceless %}
      {% if pagination.currentPage > offset + 1 %}
        <a class="{{ itemClasses }}" href="{{ _self.getUrl(pagination.firstUrl, queryString) }}">1</a>
      {% endif %}
      {% if pagination.currentPage > (offset + 2) %}
        <span class="{{ itemClasses }} {{ spacerClasses }}">…</span>
      {% endif %}
      {% for page, url in pagination.getPrevUrls(offset) %}
        <a class="{{ itemClasses }}" href="{{ _self.getUrl(url, queryString) }}">{{ page }}</a>
      {% endfor %}
      <span class="{{ itemClasses }} {{ activeClasses }}">
        {{ pagination.currentPage }}
      </span>
      {% for page, url in pagination.getNextUrls(offset) %}
        <a class="{{ itemClasses }}" href="{{ _self.getUrl(url, queryString) }}">{{ page }}</a>
      {% endfor %}
      {% if pagination.totalPages > pagination.currentPage + (offset + 1) %}
        <span class="{{ itemClasses }} {{ spacerClasses }}">…</span>
      {% endif %}
      {% if pagination.totalPages > pagination.currentPage + offset %}
        <a class="{{ itemClasses }}" href="{{ _self.getUrl(pagination.lastUrl, queryString) }}">
          {{ pagination.totalPages }}
        </a>
      {% endif %}
    {% endapply %}
  </div>
{% endif %}

{% macro getUrl(url, queryString) %}{% apply spaceless %}
  {{ url|split('?')|first ~ '?' ~ queryString }}
{% endapply %}{% endmacro %}
